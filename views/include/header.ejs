<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>GOMIN Pooljang</title>
    <link rel="stylesheet" href="../static/css/header.css" />
  </head>
  <body>
    <header style="text-align: center; width: 100%">
      <div class="header-wrapper">
        <div class="header">
          <div class="header-content">
            <div class="container logo-container">
              <img
                class="logo"
                src="../static/images/logo.png"
                alt="logo"
                onclick="home()" />
            </div>
            <div class="container menu-container">
              <button class="header-menu" onclick="menu2_1()">
                마이페이지
              </button>
              <button class="header-menu" onclick="menu2_2()">정보수정</button>
              <button class="header-menu" onclick="menu2_3()">로그아웃</button>
              <button class="header-menu" onclick="menu2_4()">회원탈퇴</button>
            </div>
          </div>
        </div>
      </div>
    </header>

    <script>
      function home() {
        document.location.href = "/";
      }

      function menu2_1() {
        const dataContainer = document.getElementById("data-container");
        const jwt = dataContainer.getAttribute("data-jwt");
        const loginStatus = dataContainer.getAttribute("data-login-status");
        const decodedPayload = dataContainer.getAttribute(
          "data-decoded-payload"
        );
        const userId = dataContainer.getAttribute("data-userId");

        const form = document.createElement("form");
        form.method = "POST";
        form.action = "/mypage";

        const input = document.createElement("input");

        input.type = "text";
        input.name = "userId";
        input.value = userId;

        // 폼에 인풋 필드 추가
        form.appendChild(input);

        // 폼을 문서에 추가
        document.body.appendChild(form);

        // 폼 제출
        form.submit();
      }

      function menu2_2() {
        alert("내정보수정 입니다");
      }
      async function menu2_3() {
        const dataContainer = document.getElementById("data-container");
        const jwt = dataContainer.getAttribute("data-jwt");
        const loginStatus = dataContainer.getAttribute("data-login-status");
        console.log("JWT ========: ", jwt);
        console.log("Login Status =========: ", loginStatus);

        const config = { headers: { Authorization: `Bearer ${jwt}` } };

        try {
          const res = await axios({
            method: "get",
            url: "/logout2",
            headers: config.headers,
          });

          console.log("Logout Response: ", res.data);
          document.location.href = "/";
        } catch (error) {}
      }

      async function menu2_4() {
        const dataContainer = document.getElementById("data-container");
        const jwt = dataContainer.getAttribute("data-jwt");
        const config = { headers: { Authorization: `Bearer ${jwt}` } };
        try {
          const password = prompt("비밀번호를 입력하세요");

          if (!password) {
            alert("비밀번호를 입력해주세요.");
            return;
          }

          const res = await axios({
            method: "post",
            url: "/deleteAccount",
            headers: {
              Authorization: `Bearer ${jwt}`,
              "Content-Type": "application/json",
            },
            data: { password: password },
          });

          if (res.data.success) {
            alert("계정이 성공적으로 삭제되었습니다.");
            document.location.href = "/";
          } else {
            alert("비밀번호가 일치하지 않습니다. 다시 시도해주세요.");
          }
        } catch (error) {
          console.error("계정 삭제 중 오류 발생:", error);
          alert("계정 삭제 중 오류가 발생했습니다. 다시 시도해주세요.");
        }
      }
    </script>
  </body>
</html>
